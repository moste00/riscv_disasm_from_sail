/*=======================================================================*/
/*This code was generated by the tool riscv_disasm_from_sail (see
 * https://github.com/rizinorg/capstone-autosync-sail)*/
/*from the sail model of RISC-V (see https://github.com/riscv/sail-riscv) @
 * version 0b9c639f19da48734cbf14b61f6ad200b7c70de9.*/
/*DO NOT MODIFY THIS CODE MANUALLY.*/
/* */
/*SPDX-License-Identifier: BSD-3-Clause*/
/*=======================================================================*/

#ifndef __Riscv_decode_compressed_gen_inc__
#define __Riscv_decode_compressed_gen_inc__
#include <stdint.h>

#include <stddef.h>

#include "riscv_ast.gen.inc"
#include <string.h>

void decode_compressed(struct ast *tree, uint64_t binary_stream) {
  // ---------------------------C_NOP-------------------------------
  {
    if (((binary_stream & 0x0000000000000003) == 0x1) &&
        (((binary_stream & 0x000000000000007C) >> 2) == 0x00) &&
        (((binary_stream & 0x0000000000000F80) >> 7) == 0x00) &&
        (((binary_stream & 0x0000000000001000) >> 12) == 0x0) &&
        (((binary_stream & 0x000000000000E000) >> 13) == 0x0)) {
      tree->ast_node_type = RISCV_C_NOP;
      return;
    }
  }
  //------------------------------------------------------------

  // ---------------------------C_ADDI4SPN-------------------------------
  {
    if (((binary_stream & 0x0000000000000003) == 0x0) &&
        (((binary_stream & 0x000000000000E000) >> 13) == 0x0)) {
      uint64_t rd = (binary_stream & 0x000000000000001C) >> 2;
      uint64_t nz3 = (binary_stream & 0x0000000000000020) >> 5;
      uint64_t nz2 = (binary_stream & 0x0000000000000040) >> 6;
      uint64_t nz96 = (binary_stream & 0x0000000000000780) >> 7;
      uint64_t nz54 = (binary_stream & 0x0000000000001800) >> 11;
      tree->ast_node_type = RISCV_C_ADDI4SPN;
      tree->ast_node.c_addi4spn.rdc = rd;
      tree->ast_node.c_addi4spn.nzimm =
          (nz96 << 4) | (nz54 << 2) | (nz3 << 1) | (nz2 << 0);
      return;
    }
  }
  //------------------------------------------------------------

  // ---------------------------C_LW-------------------------------
  {
    if (((binary_stream & 0x0000000000000003) == 0x0) &&
        (((binary_stream & 0x000000000000E000) >> 13) == 0x2)) {
      uint64_t rd = (binary_stream & 0x000000000000001C) >> 2;
      uint64_t ui6 = (binary_stream & 0x0000000000000020) >> 5;
      uint64_t ui2 = (binary_stream & 0x0000000000000040) >> 6;
      uint64_t rs1 = (binary_stream & 0x0000000000000380) >> 7;
      uint64_t ui53 = (binary_stream & 0x0000000000001C00) >> 10;
      tree->ast_node_type = RISCV_C_LW;
      tree->ast_node.c_lw.uimm = (ui6 << 4) | (ui53 << 1) | (ui2 << 0);
      tree->ast_node.c_lw.rsc = rs1;
      tree->ast_node.c_lw.rdc = rd;
      return;
    }
  }
  //------------------------------------------------------------

  // ---------------------------C_LD-------------------------------
  {
    if (((binary_stream & 0x0000000000000003) == 0x0) &&
        (((binary_stream & 0x000000000000E000) >> 13) == 0x3)) {
      uint64_t rd = (binary_stream & 0x000000000000001C) >> 2;
      uint64_t ui76 = (binary_stream & 0x0000000000000060) >> 5;
      uint64_t rs1 = (binary_stream & 0x0000000000000380) >> 7;
      uint64_t ui53 = (binary_stream & 0x0000000000001C00) >> 10;
      tree->ast_node_type = RISCV_C_LD;
      tree->ast_node.c_ld.uimm = (ui76 << 3) | (ui53 << 0);
      tree->ast_node.c_ld.rsc = rs1;
      tree->ast_node.c_ld.rdc = rd;
      return;
    }
  }
  //------------------------------------------------------------

  // ---------------------------C_SW-------------------------------
  {
    if (((binary_stream & 0x0000000000000003) == 0x0) &&
        (((binary_stream & 0x000000000000E000) >> 13) == 0x6)) {
      uint64_t rs2 = (binary_stream & 0x000000000000001C) >> 2;
      uint64_t ui6 = (binary_stream & 0x0000000000000020) >> 5;
      uint64_t ui2 = (binary_stream & 0x0000000000000040) >> 6;
      uint64_t rs1 = (binary_stream & 0x0000000000000380) >> 7;
      uint64_t ui53 = (binary_stream & 0x0000000000001C00) >> 10;
      tree->ast_node_type = RISCV_C_SW;
      tree->ast_node.c_sw.uimm = (ui6 << 4) | (ui53 << 1) | (ui2 << 0);
      tree->ast_node.c_sw.rsc1 = rs1;
      tree->ast_node.c_sw.rsc2 = rs2;
      return;
    }
  }
  //------------------------------------------------------------

  // ---------------------------C_SD-------------------------------
  {
    if (((binary_stream & 0x0000000000000003) == 0x0) &&
        (((binary_stream & 0x000000000000E000) >> 13) == 0x7)) {
      uint64_t rs2 = (binary_stream & 0x000000000000001C) >> 2;
      uint64_t ui76 = (binary_stream & 0x0000000000000060) >> 5;
      uint64_t rs1 = (binary_stream & 0x0000000000000380) >> 7;
      uint64_t ui53 = (binary_stream & 0x0000000000001C00) >> 10;
      tree->ast_node_type = RISCV_C_SD;
      tree->ast_node.c_sd.uimm = (ui76 << 3) | (ui53 << 0);
      tree->ast_node.c_sd.rsc1 = rs1;
      tree->ast_node.c_sd.rsc2 = rs2;
      return;
    }
  }
  //------------------------------------------------------------

  // ---------------------------C_ADDI-------------------------------
  {
    if (((binary_stream & 0x0000000000000003) == 0x1) &&
        (((binary_stream & 0x000000000000E000) >> 13) == 0x0)) {
      uint64_t nzi40 = (binary_stream & 0x000000000000007C) >> 2;
      uint64_t rsd = (binary_stream & 0x0000000000000F80) >> 7;
      uint64_t nzi5 = (binary_stream & 0x0000000000001000) >> 12;
      tree->ast_node_type = RISCV_C_ADDI;
      tree->ast_node.c_addi.nzi = (nzi5 << 5) | (nzi40 << 0);
      tree->ast_node.c_addi.rsd = rsd;
      return;
    }
  }
  //------------------------------------------------------------

  // ---------------------------C_JAL-------------------------------
  {
    if (((binary_stream & 0x0000000000000003) == 0x1) &&
        (((binary_stream & 0x000000000000E000) >> 13) == 0x1)) {
      uint64_t i5 = (binary_stream & 0x0000000000000004) >> 2;
      uint64_t i31 = (binary_stream & 0x0000000000000038) >> 3;
      uint64_t i7 = (binary_stream & 0x0000000000000040) >> 6;
      uint64_t i6 = (binary_stream & 0x0000000000000080) >> 7;
      uint64_t i10 = (binary_stream & 0x0000000000000100) >> 8;
      uint64_t i98 = (binary_stream & 0x0000000000000600) >> 9;
      uint64_t i4 = (binary_stream & 0x0000000000000800) >> 11;
      uint64_t i11 = (binary_stream & 0x0000000000001000) >> 12;
      tree->ast_node_type = RISCV_C_JAL;
      tree->ast_node.c_jal = (i11 << 10) | (i10 << 9) | (i98 << 7) | (i7 << 6) |
                             (i6 << 5) | (i5 << 4) | (i4 << 3) | (i31 << 0);
      return;
    }
  }
  //------------------------------------------------------------

  // ---------------------------C_ADDIW-------------------------------
  {
    if (((binary_stream & 0x0000000000000003) == 0x1) &&
        (((binary_stream & 0x000000000000E000) >> 13) == 0x1)) {
      uint64_t imm40 = (binary_stream & 0x000000000000007C) >> 2;
      uint64_t rsd = (binary_stream & 0x0000000000000F80) >> 7;
      uint64_t imm5 = (binary_stream & 0x0000000000001000) >> 12;
      tree->ast_node_type = RISCV_C_ADDIW;
      tree->ast_node.c_addiw.imm = (imm5 << 5) | (imm40 << 0);
      tree->ast_node.c_addiw.rsd = rsd;
      return;
    }
  }
  //------------------------------------------------------------

  // ---------------------------C_LI-------------------------------
  {
    if (((binary_stream & 0x0000000000000003) == 0x1) &&
        (((binary_stream & 0x000000000000E000) >> 13) == 0x2)) {
      uint64_t imm40 = (binary_stream & 0x000000000000007C) >> 2;
      uint64_t rd = (binary_stream & 0x0000000000000F80) >> 7;
      uint64_t imm5 = (binary_stream & 0x0000000000001000) >> 12;
      tree->ast_node_type = RISCV_C_LI;
      tree->ast_node.c_li.imm = (imm5 << 5) | (imm40 << 0);
      tree->ast_node.c_li.rd = rd;
      return;
    }
  }
  //------------------------------------------------------------

  // ---------------------------C_ADDI16SP-------------------------------
  {
    if (((binary_stream & 0x0000000000000003) == 0x1) &&
        (((binary_stream & 0x0000000000000F80) >> 7) == 0x02) &&
        (((binary_stream & 0x000000000000E000) >> 13) == 0x3)) {
      uint64_t nzi5 = (binary_stream & 0x0000000000000004) >> 2;
      uint64_t nzi87 = (binary_stream & 0x0000000000000018) >> 3;
      uint64_t nzi6 = (binary_stream & 0x0000000000000020) >> 5;
      uint64_t nzi4 = (binary_stream & 0x0000000000000040) >> 6;
      uint64_t nzi9 = (binary_stream & 0x0000000000001000) >> 12;
      tree->ast_node_type = RISCV_C_ADDI16SP;
      tree->ast_node.c_addi16sp =
          (nzi9 << 5) | (nzi87 << 3) | (nzi6 << 2) | (nzi5 << 1) | (nzi4 << 0);
      return;
    }
  }
  //------------------------------------------------------------

  // ---------------------------C_LUI-------------------------------
  {
    if (((binary_stream & 0x0000000000000003) == 0x1) &&
        (((binary_stream & 0x000000000000E000) >> 13) == 0x3)) {
      uint64_t imm1612 = (binary_stream & 0x000000000000007C) >> 2;
      uint64_t rd = (binary_stream & 0x0000000000000F80) >> 7;
      uint64_t imm17 = (binary_stream & 0x0000000000001000) >> 12;
      tree->ast_node_type = RISCV_C_LUI;
      tree->ast_node.c_lui.imm = (imm17 << 5) | (imm1612 << 0);
      tree->ast_node.c_lui.rd = rd;
      return;
    }
  }
  //------------------------------------------------------------

  // ---------------------------C_SRLI-------------------------------
  {
    if (((binary_stream & 0x0000000000000003) == 0x1) &&
        (((binary_stream & 0x0000000000000C00) >> 10) == 0x0) &&
        (((binary_stream & 0x000000000000E000) >> 13) == 0x4)) {
      uint64_t nzui40 = (binary_stream & 0x000000000000007C) >> 2;
      uint64_t rsd = (binary_stream & 0x0000000000000380) >> 7;
      uint64_t nzui5 = (binary_stream & 0x0000000000001000) >> 12;
      tree->ast_node_type = RISCV_C_SRLI;
      tree->ast_node.c_srli.shamt = (nzui5 << 5) | (nzui40 << 0);
      tree->ast_node.c_srli.rsd = rsd;
      return;
    }
  }
  //------------------------------------------------------------

  // ---------------------------C_SRAI-------------------------------
  {
    if (((binary_stream & 0x0000000000000003) == 0x1) &&
        (((binary_stream & 0x0000000000000C00) >> 10) == 0x1) &&
        (((binary_stream & 0x000000000000E000) >> 13) == 0x4)) {
      uint64_t nzui40 = (binary_stream & 0x000000000000007C) >> 2;
      uint64_t rsd = (binary_stream & 0x0000000000000380) >> 7;
      uint64_t nzui5 = (binary_stream & 0x0000000000001000) >> 12;
      tree->ast_node_type = RISCV_C_SRAI;
      tree->ast_node.c_srai.shamt = (nzui5 << 5) | (nzui40 << 0);
      tree->ast_node.c_srai.rsd = rsd;
      return;
    }
  }
  //------------------------------------------------------------

  // ---------------------------C_ANDI-------------------------------
  {
    if (((binary_stream & 0x0000000000000003) == 0x1) &&
        (((binary_stream & 0x0000000000000C00) >> 10) == 0x2) &&
        (((binary_stream & 0x000000000000E000) >> 13) == 0x4)) {
      uint64_t i40 = (binary_stream & 0x000000000000007C) >> 2;
      uint64_t rsd = (binary_stream & 0x0000000000000380) >> 7;
      uint64_t i5 = (binary_stream & 0x0000000000001000) >> 12;
      tree->ast_node_type = RISCV_C_ANDI;
      tree->ast_node.c_andi.imm = (i5 << 5) | (i40 << 0);
      tree->ast_node.c_andi.rsd = rsd;
      return;
    }
  }
  //------------------------------------------------------------

  // ---------------------------C_SUB-------------------------------
  {
    if (((binary_stream & 0x0000000000000003) == 0x1) &&
        (((binary_stream & 0x0000000000000060) >> 5) == 0x0) &&
        (((binary_stream & 0x0000000000000C00) >> 10) == 0x3) &&
        (((binary_stream & 0x0000000000001000) >> 12) == 0x0) &&
        (((binary_stream & 0x000000000000E000) >> 13) == 0x4)) {
      uint64_t rs2 = (binary_stream & 0x000000000000001C) >> 2;
      uint64_t rsd = (binary_stream & 0x0000000000000380) >> 7;
      tree->ast_node_type = RISCV_C_SUB;
      tree->ast_node.c_sub.rsd = rsd;
      tree->ast_node.c_sub.rs2 = rs2;
      return;
    }
  }
  //------------------------------------------------------------

  // ---------------------------C_XOR-------------------------------
  {
    if (((binary_stream & 0x0000000000000003) == 0x1) &&
        (((binary_stream & 0x0000000000000060) >> 5) == 0x1) &&
        (((binary_stream & 0x0000000000000C00) >> 10) == 0x3) &&
        (((binary_stream & 0x0000000000001000) >> 12) == 0x0) &&
        (((binary_stream & 0x000000000000E000) >> 13) == 0x4)) {
      uint64_t rs2 = (binary_stream & 0x000000000000001C) >> 2;
      uint64_t rsd = (binary_stream & 0x0000000000000380) >> 7;
      tree->ast_node_type = RISCV_C_XOR;
      tree->ast_node.c_xor.rsd = rsd;
      tree->ast_node.c_xor.rs2 = rs2;
      return;
    }
  }
  //------------------------------------------------------------

  // ---------------------------C_OR-------------------------------
  {
    if (((binary_stream & 0x0000000000000003) == 0x1) &&
        (((binary_stream & 0x0000000000000060) >> 5) == 0x2) &&
        (((binary_stream & 0x0000000000000C00) >> 10) == 0x3) &&
        (((binary_stream & 0x0000000000001000) >> 12) == 0x0) &&
        (((binary_stream & 0x000000000000E000) >> 13) == 0x4)) {
      uint64_t rs2 = (binary_stream & 0x000000000000001C) >> 2;
      uint64_t rsd = (binary_stream & 0x0000000000000380) >> 7;
      tree->ast_node_type = RISCV_C_OR;
      tree->ast_node.c_or.rsd = rsd;
      tree->ast_node.c_or.rs2 = rs2;
      return;
    }
  }
  //------------------------------------------------------------

  // ---------------------------C_AND-------------------------------
  {
    if (((binary_stream & 0x0000000000000003) == 0x1) &&
        (((binary_stream & 0x0000000000000060) >> 5) == 0x3) &&
        (((binary_stream & 0x0000000000000C00) >> 10) == 0x3) &&
        (((binary_stream & 0x0000000000001000) >> 12) == 0x0) &&
        (((binary_stream & 0x000000000000E000) >> 13) == 0x4)) {
      uint64_t rs2 = (binary_stream & 0x000000000000001C) >> 2;
      uint64_t rsd = (binary_stream & 0x0000000000000380) >> 7;
      tree->ast_node_type = RISCV_C_AND;
      tree->ast_node.c_and.rsd = rsd;
      tree->ast_node.c_and.rs2 = rs2;
      return;
    }
  }
  //------------------------------------------------------------

  // ---------------------------C_SUBW-------------------------------
  {
    if (((binary_stream & 0x0000000000000003) == 0x1) &&
        (((binary_stream & 0x0000000000000060) >> 5) == 0x0) &&
        (((binary_stream & 0x0000000000000C00) >> 10) == 0x3) &&
        (((binary_stream & 0x0000000000001000) >> 12) == 0x1) &&
        (((binary_stream & 0x000000000000E000) >> 13) == 0x4)) {
      uint64_t rs2 = (binary_stream & 0x000000000000001C) >> 2;
      uint64_t rsd = (binary_stream & 0x0000000000000380) >> 7;
      tree->ast_node_type = RISCV_C_SUBW;
      tree->ast_node.c_subw.rsd = rsd;
      tree->ast_node.c_subw.rs2 = rs2;
      return;
    }
  }
  //------------------------------------------------------------

  // ---------------------------C_ADDW-------------------------------
  {
    if (((binary_stream & 0x0000000000000003) == 0x1) &&
        (((binary_stream & 0x0000000000000060) >> 5) == 0x1) &&
        (((binary_stream & 0x0000000000000C00) >> 10) == 0x3) &&
        (((binary_stream & 0x0000000000001000) >> 12) == 0x1) &&
        (((binary_stream & 0x000000000000E000) >> 13) == 0x4)) {
      uint64_t rs2 = (binary_stream & 0x000000000000001C) >> 2;
      uint64_t rsd = (binary_stream & 0x0000000000000380) >> 7;
      tree->ast_node_type = RISCV_C_ADDW;
      tree->ast_node.c_addw.rsd = rsd;
      tree->ast_node.c_addw.rs2 = rs2;
      return;
    }
  }
  //------------------------------------------------------------

  // ---------------------------C_J-------------------------------
  {
    if (((binary_stream & 0x0000000000000003) == 0x1) &&
        (((binary_stream & 0x000000000000E000) >> 13) == 0x5)) {
      uint64_t i5 = (binary_stream & 0x0000000000000004) >> 2;
      uint64_t i31 = (binary_stream & 0x0000000000000038) >> 3;
      uint64_t i7 = (binary_stream & 0x0000000000000040) >> 6;
      uint64_t i6 = (binary_stream & 0x0000000000000080) >> 7;
      uint64_t i10 = (binary_stream & 0x0000000000000100) >> 8;
      uint64_t i98 = (binary_stream & 0x0000000000000600) >> 9;
      uint64_t i4 = (binary_stream & 0x0000000000000800) >> 11;
      uint64_t i11 = (binary_stream & 0x0000000000001000) >> 12;
      tree->ast_node_type = RISCV_C_J;
      tree->ast_node.c_j = (i11 << 10) | (i10 << 9) | (i98 << 7) | (i7 << 6) |
                           (i6 << 5) | (i5 << 4) | (i4 << 3) | (i31 << 0);
      return;
    }
  }
  //------------------------------------------------------------

  // ---------------------------C_BEQZ-------------------------------
  {
    if (((binary_stream & 0x0000000000000003) == 0x1) &&
        (((binary_stream & 0x000000000000E000) >> 13) == 0x6)) {
      uint64_t i5 = (binary_stream & 0x0000000000000004) >> 2;
      uint64_t i21 = (binary_stream & 0x0000000000000018) >> 3;
      uint64_t i76 = (binary_stream & 0x0000000000000060) >> 5;
      uint64_t rs = (binary_stream & 0x0000000000000380) >> 7;
      uint64_t i43 = (binary_stream & 0x0000000000000C00) >> 10;
      uint64_t i8 = (binary_stream & 0x0000000000001000) >> 12;
      tree->ast_node_type = RISCV_C_BEQZ;
      tree->ast_node.c_beqz.imm =
          (i8 << 7) | (i76 << 5) | (i5 << 4) | (i43 << 2) | (i21 << 0);
      tree->ast_node.c_beqz.rs = rs;
      return;
    }
  }
  //------------------------------------------------------------

  // ---------------------------C_BNEZ-------------------------------
  {
    if (((binary_stream & 0x0000000000000003) == 0x1) &&
        (((binary_stream & 0x000000000000E000) >> 13) == 0x7)) {
      uint64_t i5 = (binary_stream & 0x0000000000000004) >> 2;
      uint64_t i21 = (binary_stream & 0x0000000000000018) >> 3;
      uint64_t i76 = (binary_stream & 0x0000000000000060) >> 5;
      uint64_t rs = (binary_stream & 0x0000000000000380) >> 7;
      uint64_t i43 = (binary_stream & 0x0000000000000C00) >> 10;
      uint64_t i8 = (binary_stream & 0x0000000000001000) >> 12;
      tree->ast_node_type = RISCV_C_BNEZ;
      tree->ast_node.c_bnez.imm =
          (i8 << 7) | (i76 << 5) | (i5 << 4) | (i43 << 2) | (i21 << 0);
      tree->ast_node.c_bnez.rs = rs;
      return;
    }
  }
  //------------------------------------------------------------

  // ---------------------------C_SLLI-------------------------------
  {
    if (((binary_stream & 0x0000000000000003) == 0x2) &&
        (((binary_stream & 0x000000000000E000) >> 13) == 0x0)) {
      uint64_t nzui40 = (binary_stream & 0x000000000000007C) >> 2;
      uint64_t rsd = (binary_stream & 0x0000000000000F80) >> 7;
      uint64_t nzui5 = (binary_stream & 0x0000000000001000) >> 12;
      tree->ast_node_type = RISCV_C_SLLI;
      tree->ast_node.c_slli.shamt = (nzui5 << 5) | (nzui40 << 0);
      tree->ast_node.c_slli.rsd = rsd;
      return;
    }
  }
  //------------------------------------------------------------

  // ---------------------------C_LWSP-------------------------------
  {
    if (((binary_stream & 0x0000000000000003) == 0x2) &&
        (((binary_stream & 0x000000000000E000) >> 13) == 0x2)) {
      uint64_t ui76 = (binary_stream & 0x000000000000000C) >> 2;
      uint64_t ui42 = (binary_stream & 0x0000000000000070) >> 4;
      uint64_t rd = (binary_stream & 0x0000000000000F80) >> 7;
      uint64_t ui5 = (binary_stream & 0x0000000000001000) >> 12;
      tree->ast_node_type = RISCV_C_LWSP;
      tree->ast_node.c_lwsp.uimm = (ui76 << 4) | (ui5 << 3) | (ui42 << 0);
      tree->ast_node.c_lwsp.rd = rd;
      return;
    }
  }
  //------------------------------------------------------------

  // ---------------------------C_LDSP-------------------------------
  {
    if (((binary_stream & 0x0000000000000003) == 0x2) &&
        (((binary_stream & 0x000000000000E000) >> 13) == 0x3)) {
      uint64_t ui86 = (binary_stream & 0x000000000000001C) >> 2;
      uint64_t ui43 = (binary_stream & 0x0000000000000060) >> 5;
      uint64_t rd = (binary_stream & 0x0000000000000F80) >> 7;
      uint64_t ui5 = (binary_stream & 0x0000000000001000) >> 12;
      tree->ast_node_type = RISCV_C_LDSP;
      tree->ast_node.c_ldsp.uimm = (ui86 << 3) | (ui5 << 2) | (ui43 << 0);
      tree->ast_node.c_ldsp.rd = rd;
      return;
    }
  }
  //------------------------------------------------------------

  // ---------------------------C_SWSP-------------------------------
  {
    if (((binary_stream & 0x0000000000000003) == 0x2) &&
        (((binary_stream & 0x000000000000E000) >> 13) == 0x6)) {
      uint64_t rs2 = (binary_stream & 0x000000000000007C) >> 2;
      uint64_t ui76 = (binary_stream & 0x0000000000000180) >> 7;
      uint64_t ui52 = (binary_stream & 0x0000000000001E00) >> 9;
      tree->ast_node_type = RISCV_C_SWSP;
      tree->ast_node.c_swsp.uimm = (ui76 << 4) | (ui52 << 0);
      tree->ast_node.c_swsp.rs2 = rs2;
      return;
    }
  }
  //------------------------------------------------------------

  // ---------------------------C_SDSP-------------------------------
  {
    if (((binary_stream & 0x0000000000000003) == 0x2) &&
        (((binary_stream & 0x000000000000E000) >> 13) == 0x7)) {
      uint64_t rs2 = (binary_stream & 0x000000000000007C) >> 2;
      uint64_t ui86 = (binary_stream & 0x0000000000000380) >> 7;
      uint64_t ui53 = (binary_stream & 0x0000000000001C00) >> 10;
      tree->ast_node_type = RISCV_C_SDSP;
      tree->ast_node.c_sdsp.uimm = (ui86 << 3) | (ui53 << 0);
      tree->ast_node.c_sdsp.rs2 = rs2;
      return;
    }
  }
  //------------------------------------------------------------

  // ---------------------------C_JR-------------------------------
  {
    if (((binary_stream & 0x0000000000000003) == 0x2) &&
        (((binary_stream & 0x000000000000007C) >> 2) == 0x00) &&
        (((binary_stream & 0x0000000000001000) >> 12) == 0x0) &&
        (((binary_stream & 0x000000000000E000) >> 13) == 0x4)) {
      uint64_t rs1 = (binary_stream & 0x0000000000000F80) >> 7;
      tree->ast_node_type = RISCV_C_JR;
      tree->ast_node.c_jr = rs1;
      return;
    }
  }
  //------------------------------------------------------------

  // ---------------------------C_JALR-------------------------------
  {
    if (((binary_stream & 0x0000000000000003) == 0x2) &&
        (((binary_stream & 0x000000000000007C) >> 2) == 0x00) &&
        (((binary_stream & 0x0000000000001000) >> 12) == 0x1) &&
        (((binary_stream & 0x000000000000E000) >> 13) == 0x4)) {
      uint64_t rs1 = (binary_stream & 0x0000000000000F80) >> 7;
      tree->ast_node_type = RISCV_C_JALR;
      tree->ast_node.c_jalr = rs1;
      return;
    }
  }
  //------------------------------------------------------------

  // ---------------------------C_MV-------------------------------
  {
    if (((binary_stream & 0x0000000000000003) == 0x2) &&
        (((binary_stream & 0x0000000000001000) >> 12) == 0x0) &&
        (((binary_stream & 0x000000000000E000) >> 13) == 0x4)) {
      uint64_t rs2 = (binary_stream & 0x000000000000007C) >> 2;
      uint64_t rd = (binary_stream & 0x0000000000000F80) >> 7;
      tree->ast_node_type = RISCV_C_MV;
      tree->ast_node.c_mv.rd = rd;
      tree->ast_node.c_mv.rs2 = rs2;
      return;
    }
  }
  //------------------------------------------------------------

  // ---------------------------C_EBREAK-------------------------------
  {
    if (((binary_stream & 0x0000000000000003) == 0x2) &&
        (((binary_stream & 0x000000000000007C) >> 2) == 0x00) &&
        (((binary_stream & 0x0000000000000F80) >> 7) == 0x00) &&
        (((binary_stream & 0x0000000000001000) >> 12) == 0x1) &&
        (((binary_stream & 0x000000000000E000) >> 13) == 0x4)) {
      tree->ast_node_type = RISCV_C_EBREAK;
      return;
    }
  }
  //------------------------------------------------------------

  // ---------------------------C_ADD-------------------------------
  {
    if (((binary_stream & 0x0000000000000003) == 0x2) &&
        (((binary_stream & 0x0000000000001000) >> 12) == 0x1) &&
        (((binary_stream & 0x000000000000E000) >> 13) == 0x4)) {
      uint64_t rs2 = (binary_stream & 0x000000000000007C) >> 2;
      uint64_t rsd = (binary_stream & 0x0000000000000F80) >> 7;
      tree->ast_node_type = RISCV_C_ADD;
      tree->ast_node.c_add.rsd = rsd;
      tree->ast_node.c_add.rs2 = rs2;
      return;
    }
  }
  //------------------------------------------------------------

  // ---------------------------C_NOP_HINT-------------------------------
  {
    if (((binary_stream & 0x0000000000000003) == 0x1) &&
        (((binary_stream & 0x0000000000000F80) >> 7) == 0x00) &&
        (((binary_stream & 0x000000000000E000) >> 13) == 0x0)) {
      uint64_t im40 = (binary_stream & 0x000000000000007C) >> 2;
      uint64_t im5 = (binary_stream & 0x0000000000001000) >> 12;
      tree->ast_node_type = RISCV_C_NOP_HINT;
      tree->ast_node.c_nop_hint = (im5 << 5) | (im40 << 0);
      return;
    }
  }
  //------------------------------------------------------------

  // ---------------------------C_ADDI_HINT-------------------------------
  {
    if (((binary_stream & 0x0000000000000003) == 0x1) &&
        (((binary_stream & 0x000000000000007C) >> 2) == 0x00) &&
        (((binary_stream & 0x0000000000001000) >> 12) == 0x0) &&
        (((binary_stream & 0x000000000000E000) >> 13) == 0x0)) {
      uint64_t rsd = (binary_stream & 0x0000000000000F80) >> 7;
      tree->ast_node_type = RISCV_C_ADDI_HINT;
      tree->ast_node.c_addi_hint = rsd;
      return;
    }
  }
  //------------------------------------------------------------

  // ---------------------------C_LI_HINT-------------------------------
  {
    if (((binary_stream & 0x0000000000000003) == 0x1) &&
        (((binary_stream & 0x0000000000000F80) >> 7) == 0x00) &&
        (((binary_stream & 0x000000000000E000) >> 13) == 0x2)) {
      uint64_t imm40 = (binary_stream & 0x000000000000007C) >> 2;
      uint64_t imm5 = (binary_stream & 0x0000000000001000) >> 12;
      tree->ast_node_type = RISCV_C_LI_HINT;
      tree->ast_node.c_li_hint = (imm5 << 5) | (imm40 << 0);
      return;
    }
  }
  //------------------------------------------------------------

  // ---------------------------C_LUI_HINT-------------------------------
  {
    if (((binary_stream & 0x0000000000000003) == 0x1) &&
        (((binary_stream & 0x0000000000000F80) >> 7) == 0x00) &&
        (((binary_stream & 0x000000000000E000) >> 13) == 0x3)) {
      uint64_t imm1612 = (binary_stream & 0x000000000000007C) >> 2;
      uint64_t imm17 = (binary_stream & 0x0000000000001000) >> 12;
      tree->ast_node_type = RISCV_C_LUI_HINT;
      tree->ast_node.c_lui_hint = (imm17 << 5) | (imm1612 << 0);
      return;
    }
  }
  //------------------------------------------------------------

  // ---------------------------C_MV_HINT-------------------------------
  {
    if (((binary_stream & 0x0000000000000003) == 0x2) &&
        (((binary_stream & 0x0000000000000F80) >> 7) == 0x00) &&
        (((binary_stream & 0x0000000000001000) >> 12) == 0x0) &&
        (((binary_stream & 0x000000000000E000) >> 13) == 0x4)) {
      uint64_t rs2 = (binary_stream & 0x000000000000007C) >> 2;
      tree->ast_node_type = RISCV_C_MV_HINT;
      tree->ast_node.c_mv_hint = rs2;
      return;
    }
  }
  //------------------------------------------------------------

  // ---------------------------C_ADD_HINT-------------------------------
  {
    if (((binary_stream & 0x0000000000000003) == 0x2) &&
        (((binary_stream & 0x0000000000000F80) >> 7) == 0x00) &&
        (((binary_stream & 0x0000000000001000) >> 12) == 0x1) &&
        (((binary_stream & 0x000000000000E000) >> 13) == 0x4)) {
      uint64_t rs2 = (binary_stream & 0x000000000000007C) >> 2;
      tree->ast_node_type = RISCV_C_ADD_HINT;
      tree->ast_node.c_add_hint = rs2;
      return;
    }
  }
  //------------------------------------------------------------

  // ---------------------------C_SLLI_HINT-------------------------------
  {
    if (((binary_stream & 0x0000000000000003) == 0x2) &&
        (((binary_stream & 0x000000000000E000) >> 13) == 0x0)) {
      uint64_t nzui40 = (binary_stream & 0x000000000000007C) >> 2;
      uint64_t rsd = (binary_stream & 0x0000000000000F80) >> 7;
      uint64_t nzui5 = (binary_stream & 0x0000000000001000) >> 12;
      tree->ast_node_type = RISCV_C_SLLI_HINT;
      tree->ast_node.c_slli_hint.shamt = (nzui5 << 5) | (nzui40 << 0);
      tree->ast_node.c_slli_hint.rsd = rsd;
      return;
    }
  }
  //------------------------------------------------------------

  // ---------------------------C_SRLI_HINT-------------------------------
  {
    if (((binary_stream & 0x0000000000000003) == 0x1) &&
        (((binary_stream & 0x000000000000007C) >> 2) == 0x00) &&
        (((binary_stream & 0x0000000000000C00) >> 10) == 0x0) &&
        (((binary_stream & 0x0000000000001000) >> 12) == 0x0) &&
        (((binary_stream & 0x000000000000E000) >> 13) == 0x4)) {
      uint64_t rsd = (binary_stream & 0x0000000000000380) >> 7;
      tree->ast_node_type = RISCV_C_SRLI_HINT;
      tree->ast_node.c_srli_hint = rsd;
      return;
    }
  }
  //------------------------------------------------------------

  // ---------------------------C_SRAI_HINT-------------------------------
  {
    if (((binary_stream & 0x0000000000000003) == 0x1) &&
        (((binary_stream & 0x000000000000007C) >> 2) == 0x00) &&
        (((binary_stream & 0x0000000000000C00) >> 10) == 0x1) &&
        (((binary_stream & 0x0000000000001000) >> 12) == 0x0) &&
        (((binary_stream & 0x000000000000E000) >> 13) == 0x4)) {
      uint64_t rsd = (binary_stream & 0x0000000000000380) >> 7;
      tree->ast_node_type = RISCV_C_SRAI_HINT;
      tree->ast_node.c_srai_hint = rsd;
      return;
    }
  }
  //------------------------------------------------------------

  // ---------------------------C_FLWSP-------------------------------
  {
    if (((binary_stream & 0x0000000000000003) == 0x2) &&
        (((binary_stream & 0x000000000000E000) >> 13) == 0x3)) {
      uint64_t ui76 = (binary_stream & 0x000000000000000C) >> 2;
      uint64_t ui42 = (binary_stream & 0x0000000000000070) >> 4;
      uint64_t rd = (binary_stream & 0x0000000000000F80) >> 7;
      uint64_t ui5 = (binary_stream & 0x0000000000001000) >> 12;
      tree->ast_node_type = RISCV_C_FLWSP;
      tree->ast_node.c_flwsp.imm = (ui76 << 4) | (ui5 << 3) | (ui42 << 0);
      tree->ast_node.c_flwsp.rd = rd;
      return;
    }
  }
  //------------------------------------------------------------

  // ---------------------------C_FSWSP-------------------------------
  {
    if (((binary_stream & 0x0000000000000003) == 0x2) &&
        (((binary_stream & 0x000000000000E000) >> 13) == 0x7)) {
      uint64_t rs2 = (binary_stream & 0x000000000000007C) >> 2;
      uint64_t ui76 = (binary_stream & 0x0000000000000180) >> 7;
      uint64_t ui52 = (binary_stream & 0x0000000000001E00) >> 9;
      tree->ast_node_type = RISCV_C_FSWSP;
      tree->ast_node.c_fswsp.uimm = (ui76 << 4) | (ui52 << 0);
      tree->ast_node.c_fswsp.rs2 = rs2;
      return;
    }
  }
  //------------------------------------------------------------

  // ---------------------------C_FLW-------------------------------
  {
    if (((binary_stream & 0x0000000000000003) == 0x0) &&
        (((binary_stream & 0x000000000000E000) >> 13) == 0x3)) {
      uint64_t rd = (binary_stream & 0x000000000000001C) >> 2;
      uint64_t ui6 = (binary_stream & 0x0000000000000020) >> 5;
      uint64_t ui2 = (binary_stream & 0x0000000000000040) >> 6;
      uint64_t rs1 = (binary_stream & 0x0000000000000380) >> 7;
      uint64_t ui53 = (binary_stream & 0x0000000000001C00) >> 10;
      tree->ast_node_type = RISCV_C_FLW;
      tree->ast_node.c_flw.uimm = (ui6 << 4) | (ui53 << 1) | (ui2 << 0);
      tree->ast_node.c_flw.rsc = rs1;
      tree->ast_node.c_flw.rdc = rd;
      return;
    }
  }
  //------------------------------------------------------------

  // ---------------------------C_FSW-------------------------------
  {
    if (((binary_stream & 0x0000000000000003) == 0x0) &&
        (((binary_stream & 0x000000000000E000) >> 13) == 0x7)) {
      uint64_t rs2 = (binary_stream & 0x000000000000001C) >> 2;
      uint64_t ui6 = (binary_stream & 0x0000000000000020) >> 5;
      uint64_t ui2 = (binary_stream & 0x0000000000000040) >> 6;
      uint64_t rs1 = (binary_stream & 0x0000000000000380) >> 7;
      uint64_t ui53 = (binary_stream & 0x0000000000001C00) >> 10;
      tree->ast_node_type = RISCV_C_FSW;
      tree->ast_node.c_fsw.uimm = (ui6 << 4) | (ui53 << 1) | (ui2 << 0);
      tree->ast_node.c_fsw.rsc1 = rs1;
      tree->ast_node.c_fsw.rsc2 = rs2;
      return;
    }
  }
  //------------------------------------------------------------

  // ---------------------------C_FLDSP-------------------------------
  {
    if (((binary_stream & 0x0000000000000003) == 0x2) &&
        (((binary_stream & 0x000000000000E000) >> 13) == 0x1)) {
      uint64_t ui86 = (binary_stream & 0x000000000000001C) >> 2;
      uint64_t ui43 = (binary_stream & 0x0000000000000060) >> 5;
      uint64_t rd = (binary_stream & 0x0000000000000F80) >> 7;
      uint64_t ui5 = (binary_stream & 0x0000000000001000) >> 12;
      tree->ast_node_type = RISCV_C_FLDSP;
      tree->ast_node.c_fldsp.uimm = (ui86 << 3) | (ui5 << 2) | (ui43 << 0);
      tree->ast_node.c_fldsp.rd = rd;
      return;
    }
  }
  //------------------------------------------------------------

  // ---------------------------C_FSDSP-------------------------------
  {
    if (((binary_stream & 0x0000000000000003) == 0x2) &&
        (((binary_stream & 0x000000000000E000) >> 13) == 0x5)) {
      uint64_t rs2 = (binary_stream & 0x000000000000007C) >> 2;
      uint64_t ui86 = (binary_stream & 0x0000000000000380) >> 7;
      uint64_t ui53 = (binary_stream & 0x0000000000001C00) >> 10;
      tree->ast_node_type = RISCV_C_FSDSP;
      tree->ast_node.c_fsdsp.uimm = (ui86 << 3) | (ui53 << 0);
      tree->ast_node.c_fsdsp.rs2 = rs2;
      return;
    }
  }
  //------------------------------------------------------------

  // ---------------------------C_FLD-------------------------------
  {
    if (((binary_stream & 0x0000000000000003) == 0x0) &&
        (((binary_stream & 0x000000000000E000) >> 13) == 0x1)) {
      uint64_t rd = (binary_stream & 0x000000000000001C) >> 2;
      uint64_t ui76 = (binary_stream & 0x0000000000000060) >> 5;
      uint64_t rs1 = (binary_stream & 0x0000000000000380) >> 7;
      uint64_t ui53 = (binary_stream & 0x0000000000001C00) >> 10;
      tree->ast_node_type = RISCV_C_FLD;
      tree->ast_node.c_fld.uimm = (ui76 << 3) | (ui53 << 0);
      tree->ast_node.c_fld.rsc = rs1;
      tree->ast_node.c_fld.rdc = rd;
      return;
    }
  }
  //------------------------------------------------------------

  // ---------------------------C_FSD-------------------------------
  {
    if (((binary_stream & 0x0000000000000003) == 0x0) &&
        (((binary_stream & 0x000000000000E000) >> 13) == 0x5)) {
      uint64_t rs2 = (binary_stream & 0x000000000000001C) >> 2;
      uint64_t ui76 = (binary_stream & 0x0000000000000060) >> 5;
      uint64_t rs1 = (binary_stream & 0x0000000000000380) >> 7;
      uint64_t ui53 = (binary_stream & 0x0000000000001C00) >> 10;
      tree->ast_node_type = RISCV_C_FSD;
      tree->ast_node.c_fsd.uimm = (ui76 << 3) | (ui53 << 0);
      tree->ast_node.c_fsd.rsc1 = rs1;
      tree->ast_node.c_fsd.rsc2 = rs2;
      return;
    }
  }
  //------------------------------------------------------------

  // ---------------------------C_LBU-------------------------------
  {
    if (((binary_stream & 0x0000000000000003) == 0x0) &&
        (((binary_stream & 0x0000000000001C00) >> 10) == 0x0) &&
        (((binary_stream & 0x000000000000E000) >> 13) == 0x4)) {
      uint64_t rdc = (binary_stream & 0x000000000000001C) >> 2;
      uint64_t uimm1 = (binary_stream & 0x0000000000000020) >> 5;
      uint64_t uimm0 = (binary_stream & 0x0000000000000040) >> 6;
      uint64_t rs1c = (binary_stream & 0x0000000000000380) >> 7;
      tree->ast_node_type = RISCV_C_LBU;
      tree->ast_node.c_lbu.uimm = (uimm1 << 1) | (uimm0 << 0);
      tree->ast_node.c_lbu.rdc = rdc;
      tree->ast_node.c_lbu.rs1c = rs1c;
      return;
    }
  }
  //------------------------------------------------------------

  // ---------------------------C_LHU-------------------------------
  {
    if (((binary_stream & 0x0000000000000003) == 0x0) &&
        (((binary_stream & 0x0000000000000040) >> 6) == 0x0) &&
        (((binary_stream & 0x0000000000001C00) >> 10) == 0x1) &&
        (((binary_stream & 0x000000000000E000) >> 13) == 0x4)) {
      uint64_t rdc = (binary_stream & 0x000000000000001C) >> 2;
      uint64_t uimm1 = (binary_stream & 0x0000000000000020) >> 5;
      uint64_t rs1c = (binary_stream & 0x0000000000000380) >> 7;
      tree->ast_node_type = RISCV_C_LHU;
      tree->ast_node.c_lhu.uimm = (uimm1 << 4) | (0x0 << 0);
      tree->ast_node.c_lhu.rdc = rdc;
      tree->ast_node.c_lhu.rs1c = rs1c;
      return;
    }
  }
  //------------------------------------------------------------

  // ---------------------------C_LH-------------------------------
  {
    if (((binary_stream & 0x0000000000000003) == 0x0) &&
        (((binary_stream & 0x0000000000000040) >> 6) == 0x1) &&
        (((binary_stream & 0x0000000000001C00) >> 10) == 0x1) &&
        (((binary_stream & 0x000000000000E000) >> 13) == 0x4)) {
      uint64_t rdc = (binary_stream & 0x000000000000001C) >> 2;
      uint64_t uimm1 = (binary_stream & 0x0000000000000020) >> 5;
      uint64_t rs1c = (binary_stream & 0x0000000000000380) >> 7;
      tree->ast_node_type = RISCV_C_LH;
      tree->ast_node.c_lh.uimm = (uimm1 << 4) | (0x0 << 0);
      tree->ast_node.c_lh.rdc = rdc;
      tree->ast_node.c_lh.rs1c = rs1c;
      return;
    }
  }
  //------------------------------------------------------------

  // ---------------------------C_SB-------------------------------
  {
    if (((binary_stream & 0x0000000000000003) == 0x0) &&
        (((binary_stream & 0x0000000000001C00) >> 10) == 0x2) &&
        (((binary_stream & 0x000000000000E000) >> 13) == 0x4)) {
      uint64_t rs2c = (binary_stream & 0x000000000000001C) >> 2;
      uint64_t uimm1 = (binary_stream & 0x0000000000000020) >> 5;
      uint64_t uimm0 = (binary_stream & 0x0000000000000040) >> 6;
      uint64_t rs1c = (binary_stream & 0x0000000000000380) >> 7;
      tree->ast_node_type = RISCV_C_SB;
      tree->ast_node.c_sb.uimm = (uimm1 << 1) | (uimm0 << 0);
      tree->ast_node.c_sb.rs1c = rs1c;
      tree->ast_node.c_sb.rs2c = rs2c;
      return;
    }
  }
  //------------------------------------------------------------

  // ---------------------------C_SH-------------------------------
  {
    if (((binary_stream & 0x0000000000000003) == 0x0) &&
        (((binary_stream & 0x0000000000000040) >> 6) == 0x0) &&
        (((binary_stream & 0x0000000000001C00) >> 10) == 0x3) &&
        (((binary_stream & 0x000000000000E000) >> 13) == 0x4)) {
      uint64_t rs2c = (binary_stream & 0x000000000000001C) >> 2;
      uint64_t uimm1 = (binary_stream & 0x0000000000000020) >> 5;
      uint64_t rs1c = (binary_stream & 0x0000000000000380) >> 7;
      tree->ast_node_type = RISCV_C_SH;
      tree->ast_node.c_sh.uimm = (uimm1 << 4) | (0x0 << 0);
      tree->ast_node.c_sh.rs1c = rs1c;
      tree->ast_node.c_sh.rs2c = rs2c;
      return;
    }
  }
  //------------------------------------------------------------

  // ---------------------------C_ZEXT_B-------------------------------
  {
    if (((binary_stream & 0x0000000000000003) == 0x1) &&
        (((binary_stream & 0x000000000000001C) >> 2) == 0x0) &&
        (((binary_stream & 0x0000000000000060) >> 5) == 0x3) &&
        (((binary_stream & 0x0000000000001C00) >> 10) == 0x7) &&
        (((binary_stream & 0x000000000000E000) >> 13) == 0x4)) {
      uint64_t rsdc = (binary_stream & 0x0000000000000380) >> 7;
      tree->ast_node_type = RISCV_C_ZEXT_B;
      tree->ast_node.c_zext_b = rsdc;
      return;
    }
  }
  //------------------------------------------------------------

  // ---------------------------C_SEXT_B-------------------------------
  {
    if (((binary_stream & 0x0000000000000003) == 0x1) &&
        (((binary_stream & 0x000000000000001C) >> 2) == 0x1) &&
        (((binary_stream & 0x0000000000000060) >> 5) == 0x3) &&
        (((binary_stream & 0x0000000000001C00) >> 10) == 0x7) &&
        (((binary_stream & 0x000000000000E000) >> 13) == 0x4)) {
      uint64_t rsdc = (binary_stream & 0x0000000000000380) >> 7;
      tree->ast_node_type = RISCV_C_SEXT_B;
      tree->ast_node.c_sext_b = rsdc;
      return;
    }
  }
  //------------------------------------------------------------

  // ---------------------------C_ZEXT_H-------------------------------
  {
    if (((binary_stream & 0x0000000000000003) == 0x1) &&
        (((binary_stream & 0x000000000000001C) >> 2) == 0x2) &&
        (((binary_stream & 0x0000000000000060) >> 5) == 0x3) &&
        (((binary_stream & 0x0000000000001C00) >> 10) == 0x7) &&
        (((binary_stream & 0x000000000000E000) >> 13) == 0x4)) {
      uint64_t rsdc = (binary_stream & 0x0000000000000380) >> 7;
      tree->ast_node_type = RISCV_C_ZEXT_H;
      tree->ast_node.c_zext_h = rsdc;
      return;
    }
  }
  //------------------------------------------------------------

  // ---------------------------C_SEXT_H-------------------------------
  {
    if (((binary_stream & 0x0000000000000003) == 0x1) &&
        (((binary_stream & 0x000000000000001C) >> 2) == 0x3) &&
        (((binary_stream & 0x0000000000000060) >> 5) == 0x3) &&
        (((binary_stream & 0x0000000000001C00) >> 10) == 0x7) &&
        (((binary_stream & 0x000000000000E000) >> 13) == 0x4)) {
      uint64_t rsdc = (binary_stream & 0x0000000000000380) >> 7;
      tree->ast_node_type = RISCV_C_SEXT_H;
      tree->ast_node.c_sext_h = rsdc;
      return;
    }
  }
  //------------------------------------------------------------

  // ---------------------------C_ZEXT_W-------------------------------
  {
    if (((binary_stream & 0x0000000000000003) == 0x1) &&
        (((binary_stream & 0x000000000000001C) >> 2) == 0x4) &&
        (((binary_stream & 0x0000000000000060) >> 5) == 0x3) &&
        (((binary_stream & 0x0000000000001C00) >> 10) == 0x7) &&
        (((binary_stream & 0x000000000000E000) >> 13) == 0x4)) {
      uint64_t rsdc = (binary_stream & 0x0000000000000380) >> 7;
      tree->ast_node_type = RISCV_C_ZEXT_W;
      tree->ast_node.c_zext_w = rsdc;
      return;
    }
  }
  //------------------------------------------------------------

  // ---------------------------C_NOT-------------------------------
  {
    if (((binary_stream & 0x0000000000000003) == 0x1) &&
        (((binary_stream & 0x000000000000001C) >> 2) == 0x5) &&
        (((binary_stream & 0x0000000000000060) >> 5) == 0x3) &&
        (((binary_stream & 0x0000000000001C00) >> 10) == 0x7) &&
        (((binary_stream & 0x000000000000E000) >> 13) == 0x4)) {
      uint64_t rsdc = (binary_stream & 0x0000000000000380) >> 7;
      tree->ast_node_type = RISCV_C_NOT;
      tree->ast_node.c_not = rsdc;
      return;
    }
  }
  //------------------------------------------------------------

  // ---------------------------C_MUL-------------------------------
  {
    if (((binary_stream & 0x0000000000000003) == 0x1) &&
        (((binary_stream & 0x0000000000000060) >> 5) == 0x2) &&
        (((binary_stream & 0x0000000000001C00) >> 10) == 0x7) &&
        (((binary_stream & 0x000000000000E000) >> 13) == 0x4)) {
      uint64_t rs2c = (binary_stream & 0x000000000000001C) >> 2;
      uint64_t rsdc = (binary_stream & 0x0000000000000380) >> 7;
      tree->ast_node_type = RISCV_C_MUL;
      tree->ast_node.c_mul.rsdc = rsdc;
      tree->ast_node.c_mul.rs2c = rs2c;
      return;
    }
  }
  //------------------------------------------------------------

  // ---------------------------C_ILLEGAL-------------------------------
  {
    uint64_t s = binary_stream & 0x00000000FFFFFFFF;
    tree->ast_node_type = RISCV_C_ILLEGAL;
    tree->ast_node.c_illegal = s;
    return;
  }
  //------------------------------------------------------------
}

#endif
